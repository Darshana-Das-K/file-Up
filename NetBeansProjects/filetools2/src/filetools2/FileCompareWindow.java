/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package filetools2;

import java.awt.List;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author darshanadask
 */
public class FileCompareWindow extends javax.swing.JFrame {
    String folderpath1;
    String folderpath2;
    int size1,size2,size;
    String[] pathArray;
    String[] row1,row2;

    /**
     * Creates new form FileCompareWindow
     */
    public FileCompareWindow() {
        initComponents();
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        File2TextField = new javax.swing.JTextField();
        File2BrowseButton = new javax.swing.JButton();
        File1TextField = new javax.swing.JTextField();
        file1BrowseButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        folder1table = new javax.swing.JTable();
        UploadButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        folder2table = new javax.swing.JTable();
        CompareAB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        clearTable1 = new javax.swing.JButton();
        clearTable2 = new javax.swing.JButton();
        backButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        File2TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File2TextFieldActionPerformed(evt);
            }
        });

        File2BrowseButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        File2BrowseButton.setText("Browse");
        File2BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File2BrowseButtonActionPerformed(evt);
            }
        });

        File1TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File1TextFieldActionPerformed(evt);
            }
        });

        file1BrowseButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        file1BrowseButton.setText("Browse");
        file1BrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file1BrowseButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setText("Folder A:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("Folder B:");

        folder1table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(folder1table);

        UploadButton.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        UploadButton.setText("Upload");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        folder2table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(folder2table);

        CompareAB.setText("Compare A ->B");
        CompareAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompareABActionPerformed(evt);
            }
        });

        jButton2.setText("Compare & Sync A -> B");

        jButton5.setText("Compare A ->B");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Compare & Sync A -> B");

        clearTable1.setText("Clear Table 1");
        clearTable1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTable1ActionPerformed(evt);
            }
        });

        clearTable2.setText("Clear Table 2");
        clearTable2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTable2ActionPerformed(evt);
            }
        });

        backButton1.setText("< Back");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(File2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(File1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(file1BrowseButton)
                                    .addComponent(File2BrowseButton)
                                    .addComponent(UploadButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clearTable1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearTable2)))
                        .addContainerGap(76, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CompareAB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6))
                        .addGap(129, 129, 129))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(backButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file1BrowseButton)
                    .addComponent(File1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(File2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(File2BrowseButton)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UploadButton)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearTable2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearTable1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CompareAB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(12, 12, 12))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void File2BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File2BrowseButtonActionPerformed
        /*JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f2 = chooser.getSelectedFile();
        String filename2 = f2.getAbsolutePath();
        File2TextField.setText(filename2);*/
         JFileChooser chooser = new JFileChooser();
      chooser.setCurrentDirectory(new java.io.File("."));
      chooser.setDialogTitle("select folder");
    //  chooser.setDialogTitle(choosertitle);
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    //
    // disable the "All files" option.
    //
    chooser.setAcceptAllFileFilterUsed(false);
    //    
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
      System.out.println("getCurrentDirectory(): " 
         +  chooser.getCurrentDirectory());
      System.out.println("getSelectedFile() : " 
         +  chooser.getSelectedFile());
      folderpath2 = chooser.getSelectedFile().getAbsolutePath();
      File2TextField.setText(folderpath2);            
      }   
    else {
      System.out.println("No Selection ");
      }
    
    }//GEN-LAST:event_File2BrowseButtonActionPerformed

    private void file1BrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file1BrowseButtonActionPerformed

        JFileChooser chooser = new JFileChooser();
       //  String choosertitle="hi";
      /*  chooser.showOpenDialog(null);
        Folder f1 = chooser.getSelectedFile();
        String filename1 = f1.getAbsolutePath();
        File1TextField.setText(filename1);*/
      chooser.setCurrentDirectory(new java.io.File("."));
      chooser.setDialogTitle("select folder");
    //  chooser.setDialogTitle(choosertitle);
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    //
    // disable the "All files" option.
    //
    chooser.setAcceptAllFileFilterUsed(false);
    //    
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
  //    System.out.println("getCurrentDirectory(): " 
   //      +  chooser.getCurrentDirectory());
   //   System.out.println("getSelectedFile() : " 
  //       +  chooser.getSelectedFile());
      folderpath1 = chooser.getSelectedFile().getAbsolutePath();
      File1TextField.setText(folderpath1);
      
      
      
      }
    
    else {
      System.out.println("No Selection ");
      }
    
    }//GEN-LAST:event_file1BrowseButtonActionPerformed

    private void File1TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File1TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_File1TextFieldActionPerformed

    private void File2TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File2TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_File2TextFieldActionPerformed

    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        try{
           // Path path = Paths.get(folderpath1);
           File directory1=new File(folderpath1);
           size1=directory1.list().length;
          //  long size = Files.list(Paths.get(folderpath1)).count();
           /* for(int i=0;i<size;i++){
                String fileArray[i]= 
                
            }*/
          // File folder1 = new File(folderpath1);
           File[] listOfFiles1 = directory1.listFiles();
           for (File file : listOfFiles1) {
               
               if (file.isFile()) {
                   row1= new String[size1];
                   pathArray= new String[size1];
               //System.out.println(file.getName());
               
               DefaultTableModel model = (DefaultTableModel)folder1table.getModel();
               for(int i=0; i < size1;i++){
                   row1[i]= file.getName() ;                                                                             
               }
               for(int i=0; i < size1;i++){
                   pathArray[i]= file.getAbsolutePath() ;                                                                             
               }
               model.addRow(row1);
            }            
           }
           File directory2=new File(folderpath2);
           size2=directory2.list().length;
          //  long size = Files.list(Paths.get(folderpath1)).count();
           /* for(int i=0;i<size;i++){
                String fileArray[i]= 
                
            }*/
           //File folder2 = new File(folderpath2);
           File[] listOfFiles2 = directory2.listFiles();
           for (File file : listOfFiles2) {
               
               if (file.isFile()) {
                   row2= new String[size2];
               System.out.println(file.getName());
               DefaultTableModel model = (DefaultTableModel)folder2table.getModel();
               for(int i=0; i < size2;i++){
                   row2[i]= file.getName() ;                                                                             
               }
               model.addRow(row2);
            }            
           }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"File Not Found");
            
        }
        
    }//GEN-LAST:event_UploadButtonActionPerformed

    private void CompareABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompareABActionPerformed
        FileComparison Compare = new FileComparison();
        System.out.println(size1);
        System.out.println(size2);
        size= size1>size2 ? size1 : size2;
        System.out.println(size);
        int val = Compare.fileCompare(folderpath1, folderpath2,size);
        //int val=Compare.flag;
        
        if(val==0){
             JOptionPane.showMessageDialog(null,"None of the files in the folders are equal");
            
        }
        else{
            //Compare.equalFiles;
            FileEqualWindow w = new FileEqualWindow();
            w.setVisible(true);
           
               
        }
    }//GEN-LAST:event_CompareABActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void clearTable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTable1ActionPerformed

        DefaultTableModel model1 = (DefaultTableModel)folder1table.getModel();
        model1.setRowCount(0);
    }//GEN-LAST:event_clearTable1ActionPerformed

    private void clearTable2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTable2ActionPerformed
        DefaultTableModel model2 = (DefaultTableModel)folder2table.getModel();
        model2.setRowCount(0);
    }//GEN-LAST:event_clearTable2ActionPerformed

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        HomeWindow w3 = new HomeWindow();
        w3.setVisible(true);
    }//GEN-LAST:event_backButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileCompareWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileCompareWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileCompareWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileCompareWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileCompareWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CompareAB;
    private javax.swing.JTextField File1TextField;
    private javax.swing.JButton File2BrowseButton;
    private javax.swing.JTextField File2TextField;
    private javax.swing.JButton UploadButton;
    private javax.swing.JButton backButton1;
    private javax.swing.JButton clearTable1;
    private javax.swing.JButton clearTable2;
    private javax.swing.JButton file1BrowseButton;
    private javax.swing.JTable folder1table;
    private javax.swing.JTable folder2table;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
